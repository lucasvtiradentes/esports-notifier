!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).EsportsNotifier=t()}(this,(function(){"use strict";const e={name:"esports notifier",github_repository:"lucasvtiradentes/esports notifier",version:"1.2.2",build_date_time:"16/02/2024 23:57:48"},t="You must specify the settings when starting the class",n="You must specify a correct time string in config.datetime.timeToSendEmail, such as: 07:00";function i(e,t){"before"===t&&console.log(""),console.log(e),"after"===t&&console.log("")}function o(e,t){return e.setHours(e.getHours()+t),e}function r(e){return globalThis.Cheerio.load(e)}function a(e){return UrlFetchApp.fetch(e,{muteHttpExceptions:!0}).getContentText()}function s(e){const t="https://liquipedia.net",n=`${t}/${e.pathUrl}`,i=r(a(n))("table.infobox_matches_content"),s=e=>{var t,n;const i=e.children.find((e=>{var t;return(null===(t=e.attribs)||void 0===t?void 0:t.class.search("team-template-text"))>-1}));return null===(n=null===(t=null==i?void 0:i.children[0])||void 0===t?void 0:t.children[0])||void 0===n?void 0:n.data},c=e=>{var t,n,i;const o=e.children.find((e=>{var t;return(null===(t=e.attribs)||void 0===t?void 0:t.class.search("team-template-image-icon"))>-1}));return null===(i=null===(n=null===(t=null==o?void 0:o.children[0])||void 0===t?void 0:t.children[0])||void 0===n?void 0:n.attribs)||void 0===i?void 0:i.src};return Array.from(i).filter((e=>"1"===e.parent.attribs["data-toggle-area-content"])).map((i=>{let r,a,d,l,m;if(1===e.liquipediaPageType){const e=i.children[1].children[2].children[1].children[0].children[1].children[0].children[0];a=e.attribs.title,d=e.attribs.href,r=i.children[1].children[2].children[1].children[0].children[0].children[0].children[0].children[0].data,l=i.children[1].children[0].children[1].children[0],m=i.children[1].children[0].children[5].children[0]}if(2===e.liquipediaPageType){const e=i.children[1].children[2].children[1].children[1].children[1].children[0];a=e.attribs.title,d=e.attribs.href,r=i.children[1].children[2].children[1].children[0].children[0].children[0].data,l=i.children[1].children[0].children[1].children[0],m=i.children[1].children[0].children[5].children[0]}if(3===e.liquipediaPageType){const e=i.children[0].children[1].children[0].children[1].children[0].children[0].children[0];a=e.attribs.title,d=e.attribs.href,r=i.children[0].children[1].children[0].children[0].children[0].children[0].data,l=i.children[0].children[0].children[0].children[0],m=i.children[0].children[0].children[2].children[0]}const g=o(new Date(r.replace("- ","")),e.timezoneCorrection).toISOString(),h=g.split("T")[0],p=g.split("T")[1].slice(0,5),u=s(l),f=c(l),y=s(m),$=c(m);return{game:{name:e.gameName,image:e.gameImage,link:n},teamA:{name:u,image:`${t}${f}`,countryImage:""},teamB:{name:y,image:`${t}${$}`,countryImage:""},teams:[u,y],date:h,time:p,event:a,eventLink:`${t}${d}`,link:""}}))}function c(){const e="https://www.vlr.gg",t=`${e}/matches`,n=r(a(t))("a.match-item"),o=Array.from(n).map((n=>{const i=new Date(n.parent.prev.prev.children[0].data.trim()).toISOString().split("T")[0],o=(e=>{const[t,n]=e.split(" "),i=t.split(":"),o=`${("AM"===n?Number(i[0]):Number(i[0])+12)+2}:${i[1]}`;return 4===o.length?`0${o}`:o})(n.children[0].next.children[0].data.trim()),r=n.children[13].children[2].data.trim(),a=n.children[3].children[1].children[1].children[1].children[2].data.trim(),s=n.children[3].children[1].children[1].children[1].children[1].attribs.class.replace("flag ",""),c=n.children[3].children[3].children[1].children[1].children[2].data.trim(),d=n.children[3].children[3].children[1].children[1].children[1].attribs.class.replace("flag ","");return{game:{name:"valorant",image:"https://seeklogo.com/images/V/valorant-logo-FAB2CA0E55-seeklogo.com.png",link:t},teamA:{name:a,image:"",countryImage:`${e}/img/icons/flags/16/${s.replace("mod-","")}.png`},teamB:{name:c,image:"",countryImage:`${e}/img/icons/flags/16/${d.replace("mod-","")}.png`},teams:[a,c],date:i,time:o,event:r,eventLink:"",link:`${e}${n.attribs.href}`}}));return i(`found ${o.length} valorant matches`),o}function d(e){return e.sort(((e,t)=>Number(new Date(`${e.date}T${e.time}`))-Number(new Date(`${t.date}T${t.time}`))))}function l(e){const t=[];e.esports.games.callOfDuty.sync&&t.push(...function(e){const t=s({timezoneCorrection:e,gameName:"callOfDuty",gameImage:"https://profile.callofduty.com/resources/cod/images/shared-logo.jpg",pathUrl:"callofduty/Liquipedia:Upcoming_and_ongoing_matches",liquipediaPageType:2});return i(`found ${t.length} cod matches`),t}(e.datetime.diffHoursFromGmtTimezone)),e.esports.games.dota.sync&&t.push(...function(e){const t=s({timezoneCorrection:e,gameName:"dota",gameImage:"https://seeklogo.com/images/D/dota-2-logo-C88DABB066-seeklogo.com.png",pathUrl:"dota2/Liquipedia:Upcoming_and_ongoing_matches",liquipediaPageType:2});return i(`found ${t.length} dota matches`),t}(e.datetime.diffHoursFromGmtTimezone)),e.esports.games.rocketLeague.sync&&t.push(...function(e){const t=s({timezoneCorrection:e,gameName:"rocketLeague",gameImage:"https://upload.wikimedia.org/wikipedia/he/thumb/6/68/Rocket_league_logo_1.jpeg/675px-Rocket_league_logo_1.jpeg?20210526204716",pathUrl:"rocketleague/Liquipedia:Matches",liquipediaPageType:3});return i(`found ${t.length} rocketLeague matches`),t}(e.datetime.diffHoursFromGmtTimezone)),e.esports.games.leagueOfLegends.sync&&t.push(...function(e){const t=s({timezoneCorrection:e,gameName:"leagueOfLegends",gameImage:"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/LoL_icon.svg/256px-LoL_icon.svg.png?20201029024159",pathUrl:"leagueoflegends/Liquipedia:Matches",liquipediaPageType:2});return i(`found ${t.length} lol matches`),t}(e.datetime.diffHoursFromGmtTimezone)),e.esports.games.csgo.sync&&t.push(...function(e){const t=s({timezoneCorrection:e,gameName:"csgo",gameImage:"https://seeklogo.com/images/C/counter-strike-global-offensive-logo-CFCEFBBCE2-seeklogo.com.png",pathUrl:"counterstrike/Liquipedia:Matches",liquipediaPageType:1});return i(`found ${t.length} csgo matches`),t}(e.datetime.diffHoursFromGmtTimezone)),e.esports.games.valorant.sync&&t.push(...c()),e.esports.games.rainbowSixSiege.sync&&t.push(...function(e){const t=s({timezoneCorrection:e,gameName:"rainbowSixSiege",gameImage:"https://www.clipartmax.com/png/small/308-3080527_0-tom-clancys-rainbow-six-siege.png",pathUrl:"rainbowsix/Liquipedia:Upcoming_and_ongoing_matches",liquipediaPageType:2});return i(`found ${t.length} r6 matches`),t}(e.datetime.diffHoursFromGmtTimezone));const n=d(t);return i(`there were found ${n.length} matches across all selected games`,"before"),n}function m(t,n){let i="";const o="text-align: center;",r="border: 1px solid #333; white-space: nowrap;",a=`<center>\n                    <table style="border: 1px solid #333; width: 90%">\n                      <colgroup>\n                        <col span="1" style="width: 20%;">\n                        <col span="1" style="width: 60%;">\n                        <col span="1" style="width: 20%;">\n                      </colgroup>\n                      <thead>${`<tr style="${o}">\n                      <th style="${r}">Time</th>\n                      <th style="${r}">Match</th>\n                      <th style="${r}">TMatchInfo</th>\n                    </tr>`}</thead>\n                      <tbody>${t.map((e=>{const t=e.teamA.image||e.teamA.countryImage||"",i=e.teamB.image||e.teamB.countryImage||"";return`<tr style="${o}">\n                            <td style="${r}">\n                              <div style="text-align: center;">\n                                ${n.configs.settings.notifyOnlyAboutTodayGames?`<p style="white-space: nowrap;">${e.time}</p>`:`<p style="white-space: nowrap;">${e.date===n.today_date?`<span style="color: red;">${e.date}</span>`:e.date}</p><p style="white-space: nowrap;">${e.time}</p>`}\n                              </div>\n                            </td>\n                            <td style="${r} padding: 10px 0;">\n                              <a href="${e.link}">\n                                <div style="display: flex; align-items: center; justify-content: center; gap: 100px;">\n                                  <div style="width: 100%;">\n                                    ${""===t?"":`<img src="${t}" width="30px" height="30px"><br>`}\n                                    <span>${e.teamA.name}</span>\n                                  </div>\n                                  <div style="width: 100%;">\n                                    ${""===i?"":`<img src="${i}" width="30px" height="30px"><br>`}\n                                    <span>${e.teamB.name}</span>\n                                  </div>\n                                  </div>\n                              </a>\n                              <br>\n                              ${""!==e.eventLink?`<a href="${e.eventLink}" style="word-wrap: break-word;">${e.event}</a>`:`<span style="word-wrap: break-word;">${e.event}</span>`}\n                            </td>\n                            <td style="${r} padding: 10px 0;">\n                              <div style="text-align: center;">\n                                <a href="${e.game.link}">\n                                  <img width="30px" height="30px" src="${e.game.image}"><br>\n                                  <span>${e.game.name}</span>\n                                </a>\n                              </div>\n                            </td>\n                          </tr>`})).join("")}</tbody>\n                    </table>\n                  </center>`;return i+="Hi,<br><br>\n",i+=`there ${1===t.length?"is":"are"} <b>${t.length} ${1===t.length?"game":"games"}</b> of your favorite teams ${n.configs.settings.notifyOnlyAboutTodayGames?"today":"soon"}: <br><br>\n`,i+=`${a}<br>\n`,i+=`Regards, <br>your <a href="https://github.com/${e.github_repository}#readme"><b>${e.name}</b></a> bot`,i}return class{constructor(n){this.extended_configs={configs:null,today_date:"",user_email:"",environment:"undefined"==typeof UrlFetchApp?"development":"production"},function(e){var n;if(!e)throw new Error(t);[{objToCheck:e,requiredKeys:["esports","datetime","settings"],name:"configs"},{objToCheck:null==e?void 0:e.esports,requiredKeys:["favoriteTeams","games"],name:"configs.esports"},{objToCheck:null===(n=null==e?void 0:e.esports)||void 0===n?void 0:n.games,requiredKeys:["csgo","valorant","rainbowSixSiege","leagueOfLegends"],name:"configs.esports.games"},{objToCheck:null==e?void 0:e.datetime,requiredKeys:["diffHoursFromGmtTimezone","timeToSendEmail"],name:"configs.datetime"},{objToCheck:null==e?void 0:e.settings,requiredKeys:["notifyOnlyAboutTodayGames","strictTeamComparasion","maintanceMode","loopFunction"],name:"configs.settings"}].forEach((e=>{const{objToCheck:t,requiredKeys:n,name:i}=e;n.forEach((e=>{if(!t||!Object.keys(t).includes(e))throw new Error(`missing key in ${i}: ${e}`)}))}))}(n),this.extended_configs.configs=n,this.extended_configs.today_date=o(new Date,n.datetime.diffHoursFromGmtTimezone).toISOString().split("T")[0],this.extended_configs.user_email="production"===this.extended_configs.environment?Session.getActiveUser().getEmail():"",i(`${e.name} is running at version ${e.version} in ${this.extended_configs.environment} environment`),i(`check the docs for your version here: https://github.com/${e.github_repository}/tree/v${e.version}#readme`)}install(){i(`install ${e.name}`);const t=this.extended_configs.configs.datetime.timeToSendEmail.split(":");if(2!==t.length)throw new Error(n);const o=ScriptApp.getProjectTriggers().find((e=>e.getHandlerFunction()===this.extended_configs.configs.settings.loopFunction));o&&(i(`removed old trigger of function ${this.extended_configs.configs.settings.loopFunction}`),ScriptApp.deleteTrigger(o)),i(`the loop function ${this.extended_configs.configs.settings.loopFunction} will be triggered everyday at ${this.extended_configs.configs.datetime.timeToSendEmail}`),ScriptApp.newTrigger(this.extended_configs.configs.settings.loopFunction).timeBased().everyDays(1).atHour(Number(t[0])-this.extended_configs.configs.datetime.diffHoursFromGmtTimezone).nearMinute(Number(t[1])).create()}uninstall(){i(`uninstall ${e.name}`);const t=ScriptApp.getProjectTriggers().find((e=>e.getHandlerFunction()===this.extended_configs.configs.settings.loopFunction));t&&ScriptApp.deleteTrigger(t)}checkTodayGames(){const t=function(e,t){let n=[];n=e.filter((e=>{const n=e.teams.map((e=>e.toLowerCase())),i=t.esports.favoriteTeams.map((e=>e.toLowerCase()));let o=!1;o=t.settings.strictTeamComparasion?n.some((e=>i.includes(e.toLowerCase()))):n.some((e=>i.filter((t=>e.search(t)>-1)).length>0));let r=!1;const a=t.esports.games[e.game.name].teams.map((e=>e.toLowerCase()));return r=t.settings.strictTeamComparasion?n.some((e=>a.includes(e.toLowerCase()))):n.some((e=>a.filter((t=>e.search(t)>-1)).length>0)),o||r}));const o=d(n);return i(`there were found ${o.length} of your favorite teams in the next coulpe of days`),o}(l(this.extended_configs.configs),this.extended_configs.configs),n=t.filter((e=>e.date===this.extended_configs.today_date));i(`there were found ${n.length} of your favorite teams today`,"after");!function(t,n){0!==t.length&&(i(`email sent to ${n.user_email} to inform about ${t.length} games`),MailApp.sendEmail({to:n.user_email,subject:`${e.name} - ${t.length} ${1===t.length?"game":"games"} of your favorite teams ${n.configs.settings.notifyOnlyAboutTodayGames?`today - ${n.today_date}`:"soon"}`,htmlBody:m(t,n)}))}(this.extended_configs.configs.settings.notifyOnlyAboutTodayGames?n:t,this.extended_configs)}}}));
