class EsportsNotifier{constructor(e){this.config=e,this.VERSION="0.0.1",this.APPNAME="esports-notifier",this.GITHUB_REPOSITORY="lucasvtiradentes/esports-notifier",this.TODAY_DATE="",this.ENVIRONMENT=this.detectEnvironment(),this.USER_EMAIL="production"===this.ENVIRONMENT?this.getUserEmail():"",this.ERRORS={mustSpecifyConfig:"You must specify the settings when starting the class"},this.todayMatches=[],this.hasSyncedTodayMatches=!1,this.validateConfigs(e),this.config=e,this.TODAY_DATE=this.getDateFixedByTimezone(this.config.diffHoursFromUtc).toISOString().split("T")[0],this.logger(`${this.APPNAME} is running at version ${this.VERSION} in ${this.ENVIRONMENT} environment`),this.logger(`check the docs for your version here: https://github.com/${this.GITHUB_REPOSITORY}/tree/v${this.VERSION}#readme`)}validateConfigs(e){if(!e)throw new Error(this.ERRORS.mustSpecifyConfig);[{objToCheck:e,requiredKeys:["timeToSendEmail","diffHoursFromUtc","favoriteTeams","strictComparasion","games"],name:"configs"},{objToCheck:e.games,requiredKeys:["csgo","valorant","rainbowSixSiege","dota","lol","rocketLeague","overwatch","callOfDuty","freeFire"],name:"configs.games"}].forEach((e=>{const{objToCheck:t,requiredKeys:i,name:r}=e;i.forEach((e=>{if(!t||!Object.keys(t).includes(e))throw new Error(`missing key in ${r}: ${e}`)}))}))}detectEnvironment(){return"undefined"==typeof UrlFetchApp?"development":"production"}logger(e){console.log(e)}getDateFixedByTimezone(e){const t=new Date;return t.setHours(t.getHours()+e),t}parseHtmlData(e){return globalThis.Cheerio.load(e)}getUserEmail(){return"production"===this.ENVIRONMENT?Session.getActiveUser().getEmail():""}getPageContent(e){return"production"===this.ENVIRONMENT?UrlFetchApp.fetch(e,{muteHttpExceptions:!0}).getContentText():""}getCsgoMatches(){const e="https://liquipedia.net",t=`${e}/counterstrike/Main_Page`,i=this.getPageContent(t),r=this.parseHtmlData(i)("table.infobox_matches_content"),n=e=>{var t,i;const r=e.children.find((e=>{var t;return(null===(t=e.attribs)||void 0===t?void 0:t.class.search("team-template-text"))>-1}));return null===(i=null===(t=null==r?void 0:r.children[0])||void 0===t?void 0:t.children[0])||void 0===i?void 0:i.data},a=e=>{var t,i,r;const n=e.children.find((e=>{var t;return(null===(t=e.attribs)||void 0===t?void 0:t.class.search("team-template-image-icon"))>-1}));return null===(r=null===(i=null===(t=null==n?void 0:n.children[0])||void 0===t?void 0:t.children[0])||void 0===i?void 0:i.attribs)||void 0===r?void 0:r.src};return Array.from(r).map((t=>{const i=t.children[1].children[2].children[1].children[0].children[0].children[0].data,r=t.children[1].children[0].children[1].children[0],s=t.children[1].children[0].children[5].children[0],c=i.split(" - ")[0],h=i.split(" - ")[1],l=t.children[1].children[2].children[1].children[1].children[0].children[0].children[0].data,o=n(r),d=a(r),g=n(s),m=a(s);return{game:"csgo",teamA:{name:o,image:`${e}${d}`,countryImage:""},teamB:{name:g,image:`${e}${m}`,countryImage:""},teams:[o,g],date:c,time:h,event:l,link:`${e}`}}))}getR6Matches(){const e="https://siege.gg",t=`${e}/matches`,i=this.getPageContent(t),r=this.parseHtmlData(i)("a.match--awaiting-results");return Array.from(r).map((t=>{const i=t.children[0].children[0].children[0].data,r=t.children[0].children[1].children[0].data,n=t.children[0].children[2].children[0].data,a=t.attribs.href,s=t.children[1].children[0].children[0].children[2].children[0].data.trim(),c=t.children[1].children[0].children[0].children[0].attribs.src,h=t.children[1].children[0].children[0].children[1].children[0].attribs.src,l=t.children[1].children[2].children[0].children[2].children[0].data.trim();return{game:"rainbowSixSiege",teamA:{name:s,image:c,countryImage:h},teamB:{name:l,image:t.children[1].children[2].children[0].children[0].attribs.src,countryImage:t.children[1].children[2].children[0].children[1].children[0].attribs.src},teams:[s,l],date:i,time:r,event:n,link:`${e}${a}`}}))}getValorantMatches(){const e=this.getPageContent("https://www.vlr.gg/matches"),t=this.parseHtmlData(e)("a.match-item");return Array.from(t).map((e=>{const t=e.parent.prev.prev.children[0].data.trim(),i=e.children[0].next.children[0].data.trim(),r=e.children[13].children[2].data.trim(),n=e.children[3].children[1].children[1].children[1].children[2].data.trim(),a=e.children[3].children[1].children[1].children[1].children[1].attribs.class.replace("flag ",""),s=e.children[3].children[3].children[1].children[1].children[2].data.trim();return{game:"valorant",teamA:{name:n,image:"",countryImage:a},teamB:{name:s,image:"",countryImage:e.children[3].children[3].children[1].children[1].children[1].attribs.class.replace("flag ","")},teams:[n,s],date:t,time:i,event:r,link:e.attribs.href}}))}getAllTodayMatches(){const e=[];return this.config.games.csgo&&e.push(...this.getCsgoMatches()),this.config.games.valorant&&e.push(...this.getValorantMatches()),this.config.games.rainbowSixSiege&&e.push(...this.getR6Matches()),this.config.games.dota,this.config.games.lol,this.config.games.rocketLeague,this.config.games.overwatch,this.config.games.callOfDuty,this.config.games.freeFire,this.todayMatches=e,this.hasSyncedTodayMatches=!0,this.todayMatches}getFavoriteTeamsTodayMatches(){return(this.hasSyncedTodayMatches?this.todayMatches:this.getAllTodayMatches()).filter((e=>e.teams.some((e=>this.config.favoriteTeams.includes(e.toLowerCase())))))}}