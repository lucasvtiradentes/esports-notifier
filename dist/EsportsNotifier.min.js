class EsportsNotifier{constructor(e){this.config=e,this.VERSION="0.0.1",this.APPNAME="esports notifier",this.GITHUB_REPOSITORY="lucasvtiradentes/esports-notifier",this.TODAY_DATE="",this.SESSION_LOGS=[],this.ENVIRONMENT=this.detectEnvironment(),this.USER_EMAIL="production"===this.ENVIRONMENT?this.getUserEmail():"",this.ERRORS={mustSpecifyConfig:"You must specify the settings when starting the class"},this.todayMatches=[],this.todayFavoriteTeamsMatches=[],this.validateConfigs(e),this.config=e,this.TODAY_DATE=this.getDateFixedByTimezone(this.config.diffHoursFromUtc).toISOString().split("T")[0],this.logger(`${this.APPNAME} is running at version ${this.VERSION} in ${this.ENVIRONMENT} environment`),this.logger(`check the docs for your version here: https://github.com/${this.GITHUB_REPOSITORY}/tree/v${this.VERSION}#readme`)}validateConfigs(e){if(!e)throw new Error(this.ERRORS.mustSpecifyConfig);[{objToCheck:e,requiredKeys:["timeToSendEmail","diffHoursFromUtc","favoriteTeams","strictComparasion","games"],name:"configs"},{objToCheck:e.games,requiredKeys:["csgo","valorant","rainbowSixSiege","dota","lol","rocketLeague","overwatch","callOfDuty","freeFire"],name:"configs.games"}].forEach((e=>{const{objToCheck:t,requiredKeys:i,name:n}=e;i.forEach((e=>{if(!t||!Object.keys(t).includes(e))throw new Error(`missing key in ${n}: ${e}`)}))}))}detectEnvironment(){return"undefined"==typeof UrlFetchApp?"development":"production"}logger(e){this.SESSION_LOGS.push(e),console.log(e)}getDateFixedByTimezone(e){const t=new Date;return t.setHours(t.getHours()+e),t}parseHtmlData(e){return globalThis.Cheerio.load(e)}getUserEmail(){return"production"===this.ENVIRONMENT?Session.getActiveUser().getEmail():""}getPageContent(e){return"production"===this.ENVIRONMENT?UrlFetchApp.fetch(e,{muteHttpExceptions:!0}).getContentText():""}getCsgoMatches(){const e="https://liquipedia.net",t=`${e}/counterstrike/Liquipedia:Matches`,i=this.getPageContent(t),n=this.parseHtmlData(i)("table.infobox_matches_content"),r=e=>{var t,i;const n=e.children.find((e=>{var t;return(null===(t=e.attribs)||void 0===t?void 0:t.class.search("team-template-text"))>-1}));return null===(i=null===(t=null==n?void 0:n.children[0])||void 0===t?void 0:t.children[0])||void 0===i?void 0:i.data},a=e=>{var t,i,n;const r=e.children.find((e=>{var t;return(null===(t=e.attribs)||void 0===t?void 0:t.class.search("team-template-image-icon"))>-1}));return null===(n=null===(i=null===(t=null==r?void 0:r.children[0])||void 0===t?void 0:t.children[0])||void 0===i?void 0:i.attribs)||void 0===n?void 0:n.src};return Array.from(n).filter((e=>"1"===e.parent.attribs["data-toggle-area-content"])).map((i=>{const n=i.children[1].children[2].children[1].children[0].children[0].children[0].data,s=i.children[1].children[0].children[1].children[0],h=i.children[1].children[0].children[5].children[0],c=n.split(" - ")[0],l=n.split(" - ")[1],o=i.children[1].children[2].children[1].children[1].children[0].children[0].children[0].data,d=r(s),m=a(s),g=r(h),u=a(h);return{game:"csgo",gameLink:t,teamA:{name:d,image:`${e}${m}`,countryImage:""},teamB:{name:g,image:`${e}${u}`,countryImage:""},teams:[d,g],date:c,time:l,event:o,link:""}}))}getR6Matches(){const e="https://siege.gg",t=`${e}/matches`,i=this.getPageContent(t),n=this.parseHtmlData(i)("a.match--awaiting-results");return Array.from(n).map((i=>{const n=i.children[0].children[0].children[0].data,r=i.children[0].children[1].children[0].data,a=i.children[0].children[2].children[0].data,s=i.attribs.href,h=i.children[1].children[0].children[0].children[2].children[0].data.trim(),c=i.children[1].children[0].children[0].children[0].attribs.src,l=i.children[1].children[0].children[0].children[1].children[0].attribs.src,o=i.children[1].children[2].children[0].children[2].children[0].data.trim(),d=i.children[1].children[2].children[0].children[0].attribs.src,m=i.children[1].children[2].children[0].children[1].children[0].attribs.src;return{game:"rainbowSixSiege",gameLink:t,teamA:{name:h,image:c,countryImage:l},teamB:{name:o,image:d,countryImage:m},teams:[h,o],date:n,time:r,event:a,link:`${e}${s}`}}))}getValorantMatches(){const e="https://www.vlr.gg",t=`${e}/matches`,i=this.getPageContent(t),n=this.parseHtmlData(i)("a.match-item");return Array.from(n).map((i=>{const n=i.parent.prev.prev.children[0].data.trim(),r=i.children[0].next.children[0].data.trim(),a=i.children[13].children[2].data.trim(),s=i.children[3].children[1].children[1].children[1].children[2].data.trim(),h=i.children[3].children[1].children[1].children[1].children[1].attribs.class.replace("flag ",""),c=i.children[3].children[3].children[1].children[1].children[2].data.trim(),l=i.children[3].children[3].children[1].children[1].children[1].attribs.class.replace("flag ","");return{game:"valorant",gameLink:t,teamA:{name:s,image:"",countryImage:h},teamB:{name:c,image:"",countryImage:l},teams:[s,c],date:n,time:r,event:a,link:`${e}${i.attribs.href}`}}))}getAllTodayMatches(){const e=[];return this.config.games.csgo&&e.push(...this.getCsgoMatches()),this.config.games.valorant&&e.push(...this.getValorantMatches()),this.config.games.rainbowSixSiege&&e.push(...this.getR6Matches()),this.config.games.dota,this.config.games.lol,this.config.games.rocketLeague,this.config.games.overwatch,this.config.games.callOfDuty,this.config.games.freeFire,this.todayMatches=e,this.todayMatches}getFavoriteTeamsTodayMatches(e){const t=e.filter((e=>e.teams.some((e=>this.config.favoriteTeams.includes(e.toLowerCase())))));return this.todayFavoriteTeamsMatches=t,this.todayFavoriteTeamsMatches}generateEmailContent(e){let t="";const i='style="width: 100%; text-align: center;"',n='style="border: 1px solid #333"',r=`<center>\n<table style="border: 1px solid #333; width: 90%">\n${`<tr ${i}">\n\n                      <th ${n} width="100px">Time</th>\n                      <th ${n} width="100px">Game</th>\n                      <th ${n} width="300px">Match</th>\n\n                    </tr>`}\n${e.map((e=>{const t=[`<div style="text-align: center;"><p>${e.time}</p></div>`,`<div style="text-align: center;"><a href="${e.gameLink}">${e.game}</a></div>`,`<a href="${e.link}">\n              <div style="display: flex; align-items: center; justify-content: center; gap: 150px;">\n                <div style="width: 100%;">\n                  ${""===e.teamA.image?"":`<img src="${e.teamA.image}" width="20px" height="20px">`}\n                  <p>${e.teamA.name}</p>\n                </div>\n                <div style="width: 100%;">\n                  ${""===e.teamB.image?"":`<img src="${e.teamB.image}" width="20px" height="20px">`}\n                  <p>${e.teamB.name}</p>\n                </div>\n              </div>\n              <p>${e.event}</p>\n            </a>`];return`<tr ${i}">\n${t.map((e=>`<td ${n}>&nbsp;&nbsp;${e}</td>`)).join("\n")}\n</tr>`})).join("")}\n</table>\n</center>`;return t+="Hi,<br><br>\n",t+=`there are ${e.length} games for today: <br><br>\n`,t+=`${r}<br>\n`,t+=`Regards, <br>your <a href="https://github.com/${this.GITHUB_REPOSITORY}#readme"><b>${this.APPNAME}</b></a> bot`,t}sendEmail(e){0!==e.length&&(this.logger(`email sent to ${this.USER_EMAIL} to inform about ${e.length} games`),MailApp.sendEmail({to:this.USER_EMAIL,subject:`${this.APPNAME} - ${e.length} games for today`,htmlBody:this.generateEmailContent(e)}))}checkTodayGames(){const e=this.getAllTodayMatches(),t=this.getFavoriteTeamsTodayMatches(e);this.sendEmail(t)}}