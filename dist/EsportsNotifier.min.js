!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).EsportsNotifier=t()}(this,(function(){"use strict";return class{constructor(e){this.config=e,this.VERSION="1.1.0",this.APPNAME="esports notifier",this.GITHUB_REPOSITORY="lucasvtiradentes/esports-notifier",this.TODAY_DATE="",this.SESSION_LOGS=[],this.ENVIRONMENT=this.detectEnvironment(),this.USER_EMAIL="production"===this.ENVIRONMENT?this.getUserEmail():"",this.ERRORS={mustSpecifyConfig:"You must specify the settings when starting the class",timeToSendEmailIncorrect:"You must specify a correct time string in config.datetime.timeToSendEmail, such as: 07:00"},this.todayMatches=[],this.todayFavoriteTeamsMatches=[],this.validateConfigs(e),this.config=e,this.TODAY_DATE=this.getDateFixedByTimezone(new Date,this.config.datetime.diffHoursFromGmtTimezone).toISOString().split("T")[0],this.logger(`${this.APPNAME} is running at version ${this.VERSION} in ${this.ENVIRONMENT} environment`),this.logger(`check the docs for your version here: https://github.com/${this.GITHUB_REPOSITORY}/tree/v${this.VERSION}#readme`)}validateConfigs(e){var t;if(!e)throw new Error(this.ERRORS.mustSpecifyConfig);[{objToCheck:e,requiredKeys:["esports","datetime","settings"],name:"configs"},{objToCheck:null==e?void 0:e.esports,requiredKeys:["favoriteTeams","games"],name:"configs.esports"},{objToCheck:null===(t=null==e?void 0:e.esports)||void 0===t?void 0:t.games,requiredKeys:["csgo","valorant","rainbowSixSiege","leagueOfLegends"],name:"configs.esports.games"},{objToCheck:null==e?void 0:e.datetime,requiredKeys:["diffHoursFromGmtTimezone","timeToSendEmail"],name:"configs.datetime"},{objToCheck:null==e?void 0:e.settings,requiredKeys:["notifyOnlyAboutTodayGames","strictTeamComparasion","maintanceMode","loopFunction"],name:"configs.settings"}].forEach((e=>{const{objToCheck:t,requiredKeys:i,name:n}=e;i.forEach((e=>{if(!t||!Object.keys(t).includes(e))throw new Error(`missing key in ${n}: ${e}`)}))}))}detectEnvironment(){return"undefined"==typeof UrlFetchApp?"development":"production"}logger(e,t){this.SESSION_LOGS.push(e),"before"===t&&console.log(""),console.log(e),"after"===t&&console.log("")}getDateFixedByTimezone(e,t){return e.setHours(e.getHours()+t),e}parseHtmlData(e){return globalThis.Cheerio.load(e)}getUserEmail(){return"production"===this.ENVIRONMENT?Session.getActiveUser().getEmail():""}getPageContent(e){return"production"===this.ENVIRONMENT?UrlFetchApp.fetch(e,{muteHttpExceptions:!0}).getContentText():""}getGamesFromLiquipedia(e){const t="https://liquipedia.net",i=`${t}/${e.pathUrl}`,n=this.getPageContent(i),a=this.parseHtmlData(n)("table.infobox_matches_content"),s=e=>{var t,i;const n=e.children.find((e=>{var t;return(null===(t=e.attribs)||void 0===t?void 0:t.class.search("team-template-text"))>-1}));return null===(i=null===(t=null==n?void 0:n.children[0])||void 0===t?void 0:t.children[0])||void 0===i?void 0:i.data},o=e=>{var t,i,n;const a=e.children.find((e=>{var t;return(null===(t=e.attribs)||void 0===t?void 0:t.class.search("team-template-image-icon"))>-1}));return null===(n=null===(i=null===(t=null==a?void 0:a.children[0])||void 0===t?void 0:t.children[0])||void 0===i?void 0:i.attribs)||void 0===n?void 0:n.src};return Array.from(a).filter((e=>"1"===e.parent.attribs["data-toggle-area-content"])).map((n=>{let a,r,l,h,c;if(1===e.liquipediaPageType){const e=n.children[1].children[2].children[1].children[1].children[0].children[0];r=e.attribs.title,l=e.attribs.href,a=n.children[1].children[2].children[1].children[0].children[0].children[0].data,h=n.children[1].children[0].children[1].children[0],c=n.children[1].children[0].children[5].children[0]}if(2===e.liquipediaPageType){const e=n.children[1].children[2].children[1].children[1].children[1].children[0];r=e.attribs.title,l=e.attribs.href,a=n.children[1].children[2].children[1].children[0].children[0].children[0].data,h=n.children[1].children[0].children[1].children[0],c=n.children[1].children[0].children[5].children[0]}if(3===e.liquipediaPageType){const e=n.children[0].children[1].children[0].children[1].children[0].children[0].children[0];r=e.attribs.title,l=e.attribs.href,a=n.children[0].children[1].children[0].children[0].children[0].children[0].data,h=n.children[0].children[0].children[0].children[0],c=n.children[0].children[0].children[2].children[0]}const g=this.getDateFixedByTimezone(new Date(a.replace("- ","")),this.config.datetime.diffHoursFromGmtTimezone).toISOString(),d=g.split("T")[0],m=g.split("T")[1].slice(0,5),p=s(h),u=o(h),f=s(c),y=o(c);return{game:{name:e.gameName,image:e.gameImage,link:i},teamA:{name:p,image:`${t}${u}`,countryImage:""},teamB:{name:f,image:`${t}${y}`,countryImage:""},teams:[p,f],date:d,time:m,event:r,eventLink:`${t}${l}`,link:""}}))}getCallOfDutyMatches(){const e=this.getGamesFromLiquipedia({gameName:"callOfDuty",gameImage:"https://profile.callofduty.com/resources/cod/images/shared-logo.jpg",pathUrl:"callofduty/Liquipedia:Upcoming_and_ongoing_matches",liquipediaPageType:2});return this.logger(`found ${e.length} cod matches`),e}getDotaMatches(){const e=this.getGamesFromLiquipedia({gameName:"dota",gameImage:"https://seeklogo.com/images/D/dota-2-logo-C88DABB066-seeklogo.com.png",pathUrl:"dota2/Liquipedia:Upcoming_and_ongoing_matches",liquipediaPageType:2});return this.logger(`found ${e.length} dota matches`),e}getRocketLeagueMatches(){const e=this.getGamesFromLiquipedia({gameName:"rocketLeague",gameImage:"https://upload.wikimedia.org/wikipedia/he/thumb/6/68/Rocket_league_logo_1.jpeg/675px-Rocket_league_logo_1.jpeg?20210526204716",pathUrl:"rocketleague/Liquipedia:Matches",liquipediaPageType:3});return this.logger(`found ${e.length} rocketLeague matches`),e}getOverwatchMatches(){const e=this.getGamesFromLiquipedia({gameName:"overwatch",gameImage:"https://upload.wikimedia.org/wikipedia/commons/thumb/5/55/Overwatch_circle_logo.svg/600px-Overwatch_circle_logo.svg.png?20160426111034",pathUrl:"overwatch/Liquipedia:Upcoming_and_ongoing_matches",liquipediaPageType:1});return this.logger(`found ${e.length} overwatch matches`),e}getLolMatches(){const e=this.getGamesFromLiquipedia({gameName:"leagueOfLegends",gameImage:"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/LoL_icon.svg/256px-LoL_icon.svg.png?20201029024159",pathUrl:"leagueoflegends/Liquipedia:Matches",liquipediaPageType:2});return this.logger(`found ${e.length} lol matches`),e}getCsgoMatches(){const e=this.getGamesFromLiquipedia({gameName:"csgo",gameImage:"https://seeklogo.com/images/C/counter-strike-global-offensive-logo-CFCEFBBCE2-seeklogo.com.png",pathUrl:"counterstrike/Liquipedia:Matches",liquipediaPageType:1});return this.logger(`found ${e.length} csgo matches`),e}getR6Matches(){const e=this.getGamesFromLiquipedia({gameName:"rainbowSixSiege",gameImage:"https://www.clipartmax.com/png/small/308-3080527_0-tom-clancys-rainbow-six-siege.png",pathUrl:"rainbowsix/Liquipedia:Upcoming_and_ongoing_matches",liquipediaPageType:2});return this.logger(`found ${e.length} r6 matches`),e}getValorantMatches(){const e="https://www.vlr.gg",t=`${e}/matches`,i=this.getPageContent(t),n=this.parseHtmlData(i)("a.match-item"),a=Array.from(n).map((i=>{const n=new Date(i.parent.prev.prev.children[0].data.trim()).toISOString().split("T")[0],a=(e=>{const[t,i]=e.split(" "),n=t.split(":"),a=`${("AM"===i?Number(n[0]):Number(n[0])+12)+2}:${n[1]}`;return 4===a.length?`0${a}`:a})(i.children[0].next.children[0].data.trim()),s=i.children[13].children[2].data.trim(),o=i.children[3].children[1].children[1].children[1].children[2].data.trim(),r=i.children[3].children[1].children[1].children[1].children[1].attribs.class.replace("flag ",""),l=i.children[3].children[3].children[1].children[1].children[2].data.trim(),h=i.children[3].children[3].children[1].children[1].children[1].attribs.class.replace("flag ","");return{game:{name:"valorant",image:"https://seeklogo.com/images/V/valorant-logo-FAB2CA0E55-seeklogo.com.png",link:t},teamA:{name:o,image:"",countryImage:`${e}/img/icons/flags/16/${r.replace("mod-","")}.png`},teamB:{name:l,image:"",countryImage:`${e}/img/icons/flags/16/${h.replace("mod-","")}.png`},teams:[o,l],date:n,time:a,event:s,eventLink:"",link:`${e}${i.attribs.href}`}}));return this.logger(`found ${a.length} valorant matches`),a}sortGamesByDatetime(e){return e.sort(((e,t)=>Number(new Date(`${e.date}T${e.time}`))-Number(new Date(`${t.date}T${t.time}`))))}getAllTodayMatches(){const e=[];return this.config.esports.games.callOfDuty.sync&&e.push(...this.getCallOfDutyMatches()),this.config.esports.games.dota.sync&&e.push(...this.getDotaMatches()),this.config.esports.games.rocketLeague.sync&&e.push(...this.getRocketLeagueMatches()),this.config.esports.games.overwatch.sync&&e.push(...this.getOverwatchMatches()),this.config.esports.games.leagueOfLegends.sync&&e.push(...this.getLolMatches()),this.config.esports.games.csgo.sync&&e.push(...this.getCsgoMatches()),this.config.esports.games.valorant.sync&&e.push(...this.getValorantMatches()),this.config.esports.games.rainbowSixSiege.sync&&e.push(...this.getR6Matches()),this.todayMatches=this.sortGamesByDatetime(e),this.logger(`there were found ${this.todayMatches.length} matches across all selected games`,"before"),this.todayMatches}getFavoriteTeamsMatches(e){let t=[];return t=e.filter((e=>{const t=e.teams.map((e=>e.toLowerCase())),i=this.config.esports.favoriteTeams.map((e=>e.toLowerCase()));let n=!1;n=this.config.settings.strictTeamComparasion?t.some((e=>i.includes(e.toLowerCase()))):t.some((e=>i.filter((t=>e.search(t)>-1)).length>0));let a=!1;const s=this.config.esports.games[e.game.name].teams.map((e=>e.toLowerCase()));return a=this.config.settings.strictTeamComparasion?t.some((e=>s.includes(e.toLowerCase()))):t.some((e=>s.filter((t=>e.search(t)>-1)).length>0)),n||a})),this.todayFavoriteTeamsMatches=this.sortGamesByDatetime(t),this.logger(`there were found ${this.todayFavoriteTeamsMatches.length} of your favorite teams in the next coulpe of days`),this.todayFavoriteTeamsMatches}generateEmailContent(e){let t="";const i="text-align: center;",n="border: 1px solid #333; white-space: nowrap;",a=`<center>\n                    <table style="border: 1px solid #333; width: 90%">\n                      <colgroup>\n                        <col span="1" style="width: 20%;">\n                        <col span="1" style="width: 60%;">\n                        <col span="1" style="width: 20%;">\n                      </colgroup>\n                      <thead>${`<tr style="${i}">\n                      <th style="${n}">Time</th>\n                      <th style="${n}">Match</th>\n                      <th style="${n}">MatchInfo</th>\n                    </tr>`}</thead>\n                      <tbody>${(()=>e.map((e=>{const t=e.teamA.image||e.teamA.countryImage||"",a=e.teamB.image||e.teamB.countryImage||"";return`<tr style="${i}">\n                            <td style="${n}">\n                              <div style="text-align: center;">\n                                ${this.config.settings.notifyOnlyAboutTodayGames?`<p style="white-space: nowrap;">${e.time}</p>`:`<p style="white-space: nowrap;">${e.date===this.TODAY_DATE?`<span style="color: red;">${e.date}</span>`:e.date}</p><p style="white-space: nowrap;">${e.time}</p>`}\n                              </div>\n                            </td>\n                            <td style="${n} padding: 10px 0;">\n                              <a href="${e.link}">\n                                <div style="display: flex; align-items: center; justify-content: center; gap: 100px;">\n                                  <div style="width: 100%;">\n                                    ${""===t?"":`<img src="${t}" width="30px" height="30px"><br>`}\n                                    <span>${e.teamA.name}</span>\n                                  </div>\n                                  <div style="width: 100%;">\n                                    ${""===a?"":`<img src="${a}" width="30px" height="30px"><br>`}\n                                    <span>${e.teamB.name}</span>\n                                  </div>\n                                  </div>\n                              </a>\n                              <br>\n                              ${""!==e.eventLink?`<a href="${e.eventLink}" style="word-wrap: break-word;">${e.event}</a>`:`<span style="word-wrap: break-word;">${e.event}</span>`}\n                            </td>\n                            <td style="${n} padding: 10px 0;">\n                              <div style="text-align: center;">\n                                <a href="${e.game.link}">\n                                  <img width="30px" height="30px" src="${e.game.image}"><br>\n                                  <span>${e.game.name}</span>\n                                </a>\n                              </div>\n                            </td>\n                          </tr>`})).join(""))()}</tbody>\n                    </table>\n                  </center>`;return t+="Hi,<br><br>\n",t+=`there ${1===e.length?"is":"are"} <b>${e.length} ${1===e.length?"game":"games"}</b> of your favorite teams ${this.config.settings.notifyOnlyAboutTodayGames?"today":"soon"}: <br><br>\n`,t+=`${a}<br>\n`,t+=`Regards, <br>your <a href="https://github.com/${this.GITHUB_REPOSITORY}#readme"><b>${this.APPNAME}</b></a> bot`,t}sendEmail(e){0!==e.length&&(this.logger(`email sent to ${this.USER_EMAIL} to inform about ${e.length} games`),MailApp.sendEmail({to:this.USER_EMAIL,subject:`${this.APPNAME} - ${e.length} ${1===e.length?"game":"games"} of your favorite teams ${this.config.settings.notifyOnlyAboutTodayGames?`today - ${this.TODAY_DATE}`:"soon"}`,htmlBody:this.generateEmailContent(e)}))}install(){this.logger(`install ${this.APPNAME}`);const e=this.config.datetime.timeToSendEmail.split(":");if(2!==e.length)throw new Error(this.ERRORS.timeToSendEmailIncorrect);const t=ScriptApp.getProjectTriggers().find((e=>e.getHandlerFunction()===this.config.settings.loopFunction));t&&(this.logger(`removed old trigger of function ${this.config.settings.loopFunction}`),ScriptApp.deleteTrigger(t)),this.logger(`the loop function ${this.config.settings.loopFunction} will be triggered everyday at ${this.config.datetime.timeToSendEmail}`),ScriptApp.newTrigger(this.config.settings.loopFunction).timeBased().everyDays(1).atHour(Number(e[0])-this.config.datetime.diffHoursFromGmtTimezone).nearMinute(Number(e[1])).create()}uninstall(){this.logger(`uninstall ${this.APPNAME}`);const e=ScriptApp.getProjectTriggers().find((e=>e.getHandlerFunction()===this.config.settings.loopFunction));e&&ScriptApp.deleteTrigger(e)}checkTodayGames(){const e=this.getAllTodayMatches(),t=this.getFavoriteTeamsMatches(e),i=t.filter((e=>e.date===this.TODAY_DATE));this.logger(`there were found ${i.length} of your favorite teams today`,"after");const n=this.config.settings.notifyOnlyAboutTodayGames?i:t;this.sendEmail(n)}}}));